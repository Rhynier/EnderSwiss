[gcode_macro CENTER]
description: Nozzle Center
gcode:
    SAVE_GCODE_STATE NAME=center_state
    G90                                 ; Absolute positioning
    G0 Z25                              ; Go Up 25mm before moving
    G0 X110 Y110 F6000                  ; Move to Center of Bed
    RESTORE_GCODE_STATE NAME=center_state

#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
#   SuperSlicer: print_start EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature]
gcode:
    G90                            ; use absolute coordinates
    M83                            ; extruder relative mode

    # Start heating stuff
    STATUS_HEATING
    M140 S{params.BED}             ; set final bed temp
    M104 S150                      ; set temporary nozzle temp to prevent oozing during homing

    # Home the printer
    STATUS_HOMING
    G28                            ; home all axes
    G1 Z50 X60 Y60                 ; center above bed

    # Wait for all heating to complete
    STATUS_HEATING
    M104 S{params.EXTRUDER}        ; set final nozzle temp
    M190 S{params.BED}             ; wait for bed temp to stabilize
    M109 S{params.EXTRUDER}        ; wait for nozzle temp to stabilize

    G92 E0                         ; reset extruder
    PURGE_LINE
    
     G1 Z3 F3000                   ; move nozzle away from bed
    STATUS_PRINTING
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    STATUS_BUSY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 10) %}
        {% set z_safe = 10.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    M84                            ; disable steppers
    STATUS_READY
    
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PURGE_LINE]
description: Clean the nozzle by doing a purge line. Set EXTRUDER for desired nozzle temperature.
variable_z_contact_height: 0.28
variable_x_position: 2
gcode:
    {% set target_temp = params.EXTRUDER|default(190)|float %}
    STATUS_CLEANING
    SAVE_GCODE_STATE NAME=BEFORE_CLEAN
    G90                          ; Use absolute coordinates
    {% if "z" not in printer.toolhead.homed_axes %}
        G28                      ; Only G28 Home if needed
    {% endif %}
    G92 E0                       ; zero/reset extruder
    G1 X{x_position} Y5 F9000    ; move to nozzle start
    {% if printer.extruder.temperature < target_temp and printer.extruder.target > target_temp %}
        G1 Z30 F3000                 ; lift nozzle
        M109 S{printer.extruder.target} ; wait for previous M104
    {% elif printer.extruder.temperature < target_temp %}
        G1 Z30 F3000                 ; lift nozzle
        M109 S{target_temp}             ; Wait for min E temp
    {% endif %}
    M83                          ; set extruder to relative
    G1 E-4 F3000                 ; retract filament 4mm
    G1 Z{z_contact_height} F1500 ; drop nozzle to bed
    G92 E0                       ; zero/reset extruder
    G1 Y115 E10 F2000            ; forward prime line
    G1 X{x_position+0.3} F9000   ; move over a bit
    G92 E0                       ; zero/reset extruder
    G1 Y5 E12 F2000              ; return prime line
    G92 E0                       ; zero/reset extruder
    G1 Z3 F1500                  ; lift z 30mm
    RESTORE_GCODE_STATE NAME=BEFORE_CLEAN
    STATUS_READY

[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['configfile', 'bed_mesh'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  { action_respond_info(parameters.output) }



